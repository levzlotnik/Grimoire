[build-system]
requires = [
    "setuptools>=64",
    "wheel",
    "pybind11>=2.10.1",
    "cmake>=3.20",
    "ninja",
]
build-backend = "setuptools.build_meta"

[project]
name = "pybind11-demo"
version = "1.0.0"
description = "Comprehensive PyBind11 template showcasing all major features"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Grimoire Template", email = "noreply@example.com"},
]
maintainers = [
    {name = "Grimoire Template", email = "noreply@example.com"},
]
keywords = [
    "pybind11",
    "cpp",
    "python-bindings",
    "numpy",
    "template",
    "grimoire",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: C++",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering",
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.20.0",
    "pybind11>=2.10.1",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "scipy>=1.8.0",
    "matplotlib>=3.5.0",
]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "scipy>=1.8.0",
    "matplotlib>=3.5.0",
    "black>=22.0",
    "isort>=5.10",
    "mypy>=0.991",
    "ruff>=0.0.261",
]
docs = [
    "sphinx>=5.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.18",
]

[project.urls]
Homepage = "https://github.com/example/pybind11-demo"
Documentation = "https://pybind11-demo.readthedocs.io/"
Repository = "https://github.com/example/pybind11-demo.git"
"Bug Tracker" = "https://github.com/example/pybind11-demo/issues"

[tool.setuptools]
packages = ["pybind_demo"]
package-dir = {"" = "python"}

[tool.setuptools.package-data]
pybind_demo = ["py.typed"]

# CMake configuration for building the C++ extension
[tool.cmake]
source-dir = "."
build-dir = "build"
build-type = "Release"
args = [
    "-DCMAKE_BUILD_TYPE=Release",
    "-DPYBIND11_FINDPYTHON=ON",
]

# Testing configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=pybind_demo",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=95",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "numpy: marks tests that require numpy",
    "scipy: marks tests that require scipy",
]

# Code formatting with black
[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# Import sorting with isort
[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

# Type checking with mypy
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pybind_demo.*",
    "scipy.*",
    "matplotlib.*",
]
ignore_missing_imports = true

# Linting with ruff
[tool.ruff]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
line-length = 88
target-version = "py38"

[tool.ruff.per-file-ignores]
"tests/*" = ["B011"]  # assert False is fine in tests

# Coverage configuration
[tool.coverage.run]
source = ["pybind_demo"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]